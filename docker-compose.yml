# Docker Compose configuration for Blog Platform application 
# Includes PostgreSQL, Backend, and Frontend services

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:latest
    container_name: blog-postgres
    environment:
      POSTGRES_DB: blogdb
      POSTGRES_USER: bloguser
      POSTGRES_PASSWORD: blogpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - blog-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bloguser -d blogdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./blog-platform-be
    container_name: blog-backend
    environment:
      PORT: 3001
      NODE_ENV: development
      DATABASE_URL: postgresql://bloguser:blogpassword@postgres:5432/blogdb
      JWT_SECRET: your_jwt_secret_key_here
      JWT_REFRESH_SECRET: your_jwt_refresh_secret_key_here
      JWT_EXPIRE: 1h
      JWT_REFRESH_EXPIRE: 7d
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - ./blog-platform-be:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blog-network
    # Custom command for development with hot reload
    command: >
      sh -c "npm run db:migrate && npm run build && npm run start"

  # Frontend Service
  frontend:
    build:
      context: ./blog-platform-fe
    container_name: blog-frontend
    environment:
      NEXT_PUBLIC_BASE_URL: http://localhost:3000/api
      NEXT_PUBLIC_API_URL: http://backend:3001
      # Add any other frontend environment variables here
      # Add any other frontend environment variables here
    ports:
      - "3000:3000"
    volumes:
      - ./blog-platform-fe:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    depends_on:
      - backend
    networks:
      - blog-network
    # Custom command for development with hot reload
    command: >
      sh -c "npm run build && npm run start"

# Volume definitions for data persistence
volumes:
  postgres-data:
    name: blog-postgres-data

# Network definition for service communication
networks:
  blog-network:
    name: blog-network
    driver: bridge

